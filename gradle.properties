# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx4g -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC -XX:MaxMetaspaceSize=512m -Dkotlin.daemon.jvm.options=-XX:MaxMetaspaceSize=1g -Dlint.nullness.ignore-deprecated=true
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true
# Enables Gradle build cache to store and reuse build outputs
# Improves build performance by avoiding redundant task execution
# More details: https://docs.gradle.org/current/userguide/build_cache.html
org.gradle.caching=true
# Enables configuration on demand, making Gradle configure only necessary projects
# Speeds up builds in multi-project setups by skipping unneeded configurations
# More details: https://docs.gradle.org/current/userguide/multi_project_builds.html#sec:configuration_on_demand
org.gradle.configureondemand=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app"s APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official
# Disables non-transitive R class generation
# When false, R class includes references from dependencies
# Set to false to maintain traditional R class behavior where all resource IDs are accessible
# More details: https://developer.android.com/studio/build/gradle-tips#non-transitive-r-class
android.nonTransitiveRClass=false
# Enables static R class generation by default for build features
# When true, generates R class with final fields, potentially improving build performance
# Useful for catching resource reference errors at compile time
android.defaults.buildfeatures.usestaticrclass=true