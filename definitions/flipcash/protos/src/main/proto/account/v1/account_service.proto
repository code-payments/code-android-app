syntax = "proto3";
package flipcash.account.v1;
option go_package = "github.com/code-payments/flipcash-protobuf-api/generated/go/account/v1;acountpb";
option java_package = "com.codeinc.flipcash.gen.account.v1";
option objc_class_prefix = "FPBAccountV1";
import "common/v1/common.proto";
import "google/protobuf/timestamp.proto";

service Account {
	// Register registers a new user, bound to the provided PublicKey.
	// If the PublicKey is already in use, the previous user account is returned.
	rpc Register(RegisterRequest) returns (RegisterResponse);
	// Login retrieves the UserId (and in the future, potentially other information)
	// required for 'recovering' an account.
	rpc Login(LoginRequest) returns (LoginResponse);
	// GetUserFlags gets user-specific flags.
	rpc GetUserFlags(GetUserFlagsRequest) returns (GetUserFlagsResponse);
}
message RegisterRequest {
	// PublicKey the public key that is authorized to perform actions on the
	// registered users behalf.
	common.v1.PublicKey public_key = 1;
	// Signature of this message (without the signature), using the provided keypair.
	common.v1.Signature signature = 2;
}
message RegisterResponse {
	Result result = 1;
	enum Result {
		OK                   = 0;
		INVALID_SIGNATURE    = 1;
		DENIED               = 2;
	}
	// The UserId associated with the account.
	common.v1.UserId user_id = 2;
}
message LoginRequest {
	// Timestamp is the timestamp the request was generated
	//
	// The server may reject the request if the timestamp is too far off
	// the current (server) time. This is to prevent replay attacks.
	google.protobuf.Timestamp timestamp = 1;
	common.v1.Auth auth = 2;
}
message LoginResponse {
	Result result = 1;
	enum Result {
		OK                = 0;
		INVALID_TIMESTAMP = 1;
		DENIED            = 2;
	}
	common.v1.UserId user_id = 2;
}
message GetUserFlagsRequest {
	common.v1.UserId user_id = 1;
	common.v1.Auth auth = 2;
}
message GetUserFlagsResponse {
	Result result = 1;
	enum Result {
		OK     = 0;
		DENIED = 1;
	}
	UserFlags user_flags = 2;
}
message UserFlags {
    // Is this a fully registered account using IAP for account creation?
	bool is_registered_account = 1;
	// Is this user associated with a Flipcash staff member?
	bool is_staff = 2;
}
