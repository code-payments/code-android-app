syntax = "proto3";
package flipchat.common.v1;
option go_package = "github.com/code-payments/flipchat-protobuf-api/generated/go/common/v1;commonpb";
option java_package = "com.codeinc.flipchat.gen.common.v1";
option objc_class_prefix = "FPBCommonV1";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

// Auth provides an authentication information for RPCs/messages.
//
// Currently, only a single form is supported, but it may be useful in
// the future to rely on session tokens instead.
message Auth {
    oneof kind {
        // KeyPair uses pub key cryptography to verify.
        KeyPair key_pair = 1;
    }
    // KeyPair uses a keypair to verify a message.
    //
    // The signature should be of the encapsulating proto message,
    // _without_ the Auth section being set.
    message KeyPair {
        PublicKey pub_key = 1;
        Signature signature = 2;
    }
}
message UserId {
    bytes value = 1 ;
}
message ChatId {
    // Sufficient space is left for a consistent hash value, though other types
    // of values may be used.
    bytes value = 1 ;
}
// AppInstallId is a unque ID tied to a client app installation. It does not
// identify a device. Value should remain private and not be shared across
// installs.
message AppInstallId {
    string value = 1 ;
}
// Locale is a user locale consisting of a combination of language, script and region
message Locale {
    string value = 1;
}
message PublicKey {
    bytes value = 1 ;
}
message IntentId {
    bytes value = 1 ;
}
message Signature {
    bytes value = 1 ;
}
message PaymentAmount {
    uint64 quarks = 1;
}
message ServerPing {
    // Timestamp the ping was sent on the stream, for client to get a sense
    // of potential network latency
    google.protobuf.Timestamp timestamp = 1;
    // The delay server will apply before sending the next ping
    google.protobuf.Duration ping_delay = 2;
}
message ClientPong {
    // Timestamp the Pong was sent on the stream, for server to get a sense
    // of potential network latency
    google.protobuf.Timestamp timestamp = 1;
}
message PagingToken {
    // Value contains a value of an identifier of the collection in common.
    //
    // For example, GetChats uses the ChatId.Value, where GetMessages uses MessageId.Value
    // as the contents. It does _not_ contain the serialized ChatId or MessageId.
    bytes value = 1 ;
}
message QueryOptions {
    // PageSize limits the maximum page size of a response.
    //
    // Server may choose to return less items. If empty, server
    // may select an arbitrary page size.
    int64 page_size = 1;
    // PagingToken is token that can be extracted from the identifier of a collection.
    PagingToken paging_token = 2;
    // Order is the order of elements, if applicable.
    Order order = 3;
    enum Order {
        ASC = 0;
        DESC = 1;
    }
}
